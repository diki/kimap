//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("kimap", "ServiceItemServiceItem", "ParentServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(kiMap.ServiceItem), "ChildServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(kiMap.ServiceItem))]

#endregion

namespace kiMap
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class kimapContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new kimapContainer object using the connection string found in the 'kimapContainer' section of the application configuration file.
        /// </summary>
        public kimapContainer() : base("name=kimapContainer", "kimapContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new kimapContainer object.
        /// </summary>
        public kimapContainer(string connectionString) : base(connectionString, "kimapContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new kimapContainer object.
        /// </summary>
        public kimapContainer(EntityConnection connection) : base(connection, "kimapContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceItem> ServiceItemSet
        {
            get
            {
                if ((_ServiceItemSet == null))
                {
                    _ServiceItemSet = base.CreateObjectSet<ServiceItem>("ServiceItemSet");
                }
                return _ServiceItemSet;
            }
        }
        private ObjectSet<ServiceItem> _ServiceItemSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceItemSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceItemSet(ServiceItem serviceItem)
        {
            base.AddObject("ServiceItemSet", serviceItem);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="kimap", Name="ServiceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sentence">Initial value of the Sentence property.</param>
        public static ServiceItem CreateServiceItem(global::System.Int32 id, global::System.String sentence)
        {
            ServiceItem serviceItem = new ServiceItem();
            serviceItem.Id = id;
            serviceItem.Sentence = sentence;
            return serviceItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sentence
        {
            get
            {
                return _Sentence;
            }
            set
            {
                OnSentenceChanging(value);
                ReportPropertyChanging("Sentence");
                _Sentence = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sentence");
                OnSentenceChanged();
            }
        }
        private global::System.String _Sentence;
        partial void OnSentenceChanging(global::System.String value);
        partial void OnSentenceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("kimap", "ServiceItemServiceItem", "ChildServiceItem")]
        public EntityCollection<ServiceItem> ParentServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceItem>("kimap.ServiceItemServiceItem", "ChildServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceItem>("kimap.ServiceItemServiceItem", "ChildServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("kimap", "ServiceItemServiceItem", "ParentServiceItem")]
        public ServiceItem ChildServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("kimap.ServiceItemServiceItem", "ParentServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("kimap.ServiceItemServiceItem", "ParentServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceItem> ChildServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("kimap.ServiceItemServiceItem", "ParentServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceItem>("kimap.ServiceItemServiceItem", "ParentServiceItem", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
